#+title: 第十四章 Linux 帐号管理与 ACL 权限配置
#+author: lemon
#+date:<2016-04-07 Thu>

* Linux 帐号与群组


** 使用者标识符: UID 与 GID

Linux 系统通过识别帐号的 ID 来识别登录者的身份，每个登录者都至少有两个 ID:

    + UID (User ID)
    + GID (Group ID)

** 使用者帐号

在远程登录系统的时候，在输入帐号密码之后，系统会帮我处理以下的事情:

    + 搜索 /etc/passwd, 与输入的帐号对比，如果有则将该帐号对应的 UID 与 GID (/etc/group 中) 读出来，还会将该帐号的 home 目录与
     shell 配置一并读出来。
    + 然后进入 /etc/shadow 文件中查找对应帐号的 UID，对比输入的密码。
    + 如果帐号和密码都没问题的话，就可以进入系统了


*** /etc/passwd 文件结构

这个文件中每一行都代表着一个帐号，有几行就代表有几个帐号在系统中：

以第一行为例:

   #+BEGIN_SRC shell
      root:x:0:0:root:/root:/bin/bash
   #+END_SRC
中间使用 : 隔开的7个部分代表着不同的含义：

| 列 | 含义                                                                                      |
|----+-------------------------------------------------------------------------------------------|
|  1 | 帐号名称                                                                                  |
|  2 | 密码，早期系统中密码都是放在这里，由于安全性的原因，后来将密码都移到了 /etc/shadow 文件中 |
|  3 | UID 0(系统管理员) 1-499(系统帐号) 500-65535 （可登录帐号）                                |
|  4 | GID                                                                                       |
|  5 | 用户信息说明                                                                              |
|  6 | home 目录                                                                                 |
|  7 | Shell 类型                                                                                  |


*** /etc/shadow 文件结构

这个文件的结构类似于 /etc/passwd 文件，使用 ： 隔开，有9列，每一列的含义如下:

| 列 | 含义                                   |
|----+----------------------------------------|
|  1 | 帐号名称                               |
|  2 | 密码(经过加密了)                       |
|  3 | 最近更改的密码的日期                   |
|  4 | 密码不能更改的天数                     |
|  5 | 密码需要重新更改的天数                 |
|  6 | 密码需要更改前的警告天数               |
|  7 | 密码过期后的帐号宽限时间(密码失效日期) |
|  8 | 帐号失效日期                           |
|  9 | 保留字段                                   |


** 关于群组： 有效与初始群组、groups、newgrp


*** /etc/group 文件结构

同样使用 : 分隔：

   #+BEGIN_SRC shell
      root:x:0:root
   #+END_SRC

| 列 | 意义     |
|----+----------|
|  1 | 组名     |
|  2 | 群组口令 |
|  3 | GID      |
|  4 | 此群组支持的帐号名称 |


*** 有效群组(effective group) 与初始群组(inital group)

用户在被创建的时候所赋予的 GID 就是初始群组，当一个用户加入到两个以上群组的时候，新建文件或者目录的时候新文件所以有效群组。


*** groups 有效与支持群组的观察

 groups 可以查看当前用户的支持群组，打印出来的第一个群组就是有效群组。

*** newgrp 有效群组的切换

  newgrp 可以在当前用户的支持群组里面切换有效群组。


*** /etc/gshadow

这个文件同样也被 : 分隔成了 4 列：

| 列 | 含义                                                |
|----+-----------------------------------------------------|
|  1 | 组名                                                |
|  2 | 密码，开头为 ! 表示没有合法的密码，所以没有群管理员 |
|  3 | 群组管理员的帐号                                    |
|  4 | 该群组的所属帐号                                            |

* 帐号管理

** 新增与移除用户: useradd, 相关配置文件，passwd, usermod, userdel

创建一个完整的用户需要用到 useradd 与 passwd 命令:

*** useradd

| 参数 | 意义                                                              |
|------+-------------------------------------------------------------------|
| -u   | 后面接的是 UID，是一组数组。直接指定一个特定的 UID 给这个帐号     |
| -g   | initial group 的 GID                                              |
| -G   | 后面的接的组名是这个帐号还可以加入的群组                          |
| -M   | 不创建用户 home 目录                                              |
| -m   | 创建用户 home 目录                                                |
| -c   | /etc/passwd 的第五列的备注，可以随便添加                          |
| -d   | 指定一个 home ml，而不使用系统默认的，务必使用绝对路径            |
| -r   | 创建一个系统的帐号，这个帐号的 UID 会有限制                       |
| -s   | 后面接一个 shell 的名称，没有指定则为 /bin/bash                   |
| -e   | 帐号失效的日的配置                                                |
| -f   | /etc/shadow 文件第7列，指令时候会失效，0为立刻失效， -1为永不失效 |

这个命令会绑我们完成以下的事情：

+ 在 /etc/passwd 文件中创建一行与帐号相关的数据，创建 UID/GID/home 目录等
+ 在 /etc/shadow 文件里面将口令的相关参数填进去，但是还没有密码
+ 在 /etc/group 文件中加一个与帐号名称一样的组名
+ 在 /home 底下创建一个与帐号同名的目录作为用户 home 目录，且权限为700

在创建完帐号之后，还需要使用 passwd 命令来完成帐号的创建。
